name: Cookiecutter CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # weekly tests
    - cron: "0 0 * * 0"

defaults:
  run:
    shell: bash

jobs:
  generate-cookiecutter:
    name: "Cookiecutter Artifacts"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
        dependency_source:
          - key: 1
            value: "Prefer conda-forge over the default anaconda channel with pip fallback"
            name: "condaforge"
          - key: 2
            value: "Prefer default anaconda channel with pip fallback"
            name: "anaconda"
          - key: 3
            value: "Dependencies from pip only (no conda)"
            name: "pip"
        rtd:
          - key: 1
            value: "y"
          - key: 2
            value: "n"
    env:
      TEST_REPO_NAME: "testmdakit_deps_${{ matrix.dependency_source['name'] }}_rtd_${{ matrix.rtd['value'] }}"
      ACTION_DIR: ".github/actions/${TEST_REPO_NAME}"
      RUN_OS: ${{ matrix.os }}


    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pyyaml cookiecutter

      - name: Construct cookiecutter
        run: |
          cookiecutter --verbose --output-dir ${TEST_REPO_NAME} --no-input . \
            project_name=$TEST_REPO_NAME \
            repo_name=proto-cookiecutter-mda \
            package_name=$TEST_REPO_NAME \
            github_username=github-actions-ci \
            github_host_account=lilyminium \
            author_name="Github Actions CI" \
            author_email="github-action@users.noreply.github.com" \
            description="Test MDAKit repository: deps=${{ matrix.dependency_source }}, rtd=${{ matrix.rtd }}" \
            dependency_source="${{ matrix.dependency_source['value'] }}" \
            include_ReadTheDocs="${{ matrix.rtd['value'] }}"
          
          ls *

          mkdir -p $ACTION_DIR
          WORKFLOW_DIR="${TEST_REPO_NAME}/proto-cookiecutter-mda/.github/workflows/subflows"
          
          for action in build_from_source_pip pypi ; do
            ./tests/workflow_to_action.py ${WORKFLOW_DIR}/${action}.yaml ${ACTION_DIR}/${action}
            echo $action
            echo ""
            cat ./tests/workflow_to_action.py ${WORKFLOW_DIR}/${action}.yaml
            echo ""
            cat ${ACTION_DIR}/${action}/action.yaml
          done

      - name: Install act
        uses: actionsflow/setup-act@v1
        
      - name: Test build from source
        run: |
          cd ${TEST_REPO_NAME}/proto-cookiecutter-mda
          act -P ubuntu-latest=ubuntu:latest
